<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>eu.agilejava</groupId>
    <artifactId>secure-duke</artifactId>
    <name>Secure Duke</name>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.docker-maven-plugin>0.24.0</version.docker-maven-plugin>
        <assembly.file.postfix>liberty</assembly.file.postfix>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>1.3</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.guides</groupId>
            <artifactId>resources</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>secure-duke</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-app</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/dropins
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.build.finalName}.war</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy the keystore that Liberty will use -->
                    <execution>
                        <id>copy-keystore-to-liberty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifact>
                                    <groupId>io.openliberty.guides</groupId>
                                    <artifactId>resources</artifactId>
                                    <version>0.0.1-SNAPSHOT</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/resources/security</outputDirectory>
                                    <includes>keystore.jceks</includes>
                                </artifact>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.wasdev.wlp.maven.plugins</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>2.2</version>
                <extensions>true</extensions>
                <configuration>
                    <install>
                        <type>webProfile7</type>
                        <version>2018.+</version>
                    </install>
                    <configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
                    <bootstrapProperties>
                        <app.name>${project.build.finalName}.war</app.name>
                        <http.port>6060</http.port>
                        <https.port>6061</https.port>
                        <backend.hostname>localhost</backend.hostname>
                        <liberty.backend.service.hostname>localhost</liberty.backend.service.hostname>
                        <liberty.backend.service.ssl.port>5061</liberty.backend.service.ssl.port>
                        <jwt.issuer>http://openliberty.io</jwt.issuer>
                    </bootstrapProperties>
                    <packageFile>${project.build.directory}/${project.build.finalName}.jar</packageFile>
                    <include>runnable</include>
                </configuration>
                <executions>
                    <execution>
                        <id>install-liberty</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>install-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package-app</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package-server</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${version.docker-maven-plugin}</version>
                <configuration>
                    <images>
                        <image>
                            <alias>${project.artifactId}-liberty</alias>
                            <name>ivargrimstad/${project.artifactId}:liberty</name>
                            <build>
                                <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                <from>websphere-liberty:beta</from>
                                <assembly>
                                    <basedir>/opt/ibm/wlp/usr/servers</basedir>
                                    <inline>
                                        <files>
                                            <file>
                                                <source>${basedir}/target/${project.build.finalName}.war</source>
                                                <outputDirectory>defaultServer/dropins</outputDirectory>
                                            </file>
                                            <file>
                                                <source>${basedir}/src/main/liberty/config/server.xml</source>
                                                <outputDirectory>defaultServer</outputDirectory>
                                            </file>
                                        </files>
                                    </inline>
                                </assembly>

                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
